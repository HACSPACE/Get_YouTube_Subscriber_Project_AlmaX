{
	"info": {
		"_postman_id": "68a799c3-c852-4d45-89fd-1662dd64d0af",
		"name": "API documentation Backend Devlopment",
		"description": "# Get YouTube Subscribers API Documentation\n\n## Overview\n\nThe \"Get YouTube Subscribers\" project is a backend system developed to manage and retrieve data about YouTube subscribers. It provides a set of RESTful API endpoints to interact with the subscriber data stored in a MongoDB database. The project aims to support functionalities such as fetching all subscribers, retrieving specific subscriber details, and rendering views for an admin dashboard and a start page.\n\n# Get YouTube Subscribers API Routes\n\n## GET /\n\n- **Description:** Renders the admin dashboard view.\n    \n- **Response:** HTML content rendering the admin dashboard view.\n    \n- **Status Codes:**\n    \n    - 200: Success\n        \n\n## GET /start-now\n\n- **Description:** Renders the startNow page view.\n    \n- **Response:** HTML content rendering the startNow page view.\n    \n- **Status Codes:**\n    \n    - 200: Success\n        \n\n## GET /subscribers\n\n- **Description:** Retrieves data of all subscribers.\n    \n- **Response:** JSON array containing data of all subscribers.\n    \n- **Status Codes:**\n    \n    - 200: Success\n        \n    - 500: Internal Server Error\n        \n\n## GET /subscribers/names\n\n- **Description:** Retrieves names and subscribed channels of all subscribers.\n    \n- **Response:** JSON array containing names and subscribed channels of all subscribers.\n    \n- **Status Codes:**\n    \n    - 200: Success\n        \n    - 500: Internal Server Error\n        \n\n## GET /subscribers/:id\n\n- **Description:** Retrieves a single subscriber by ID.\n    \n- **Request Parameter:** `id` (Subscriber ID)\n    \n- **Response:** JSON object containing data of the specified subscriber.\n    \n- **Status Codes:**\n    \n    - 200: Success\n        \n    - 400: Bad Request (Invalid Subscriber ID)\n        \n    - 500: Internal Server Error\n        \n\n## Usage\n\nTo interact with the \"Get YouTube Subscribers\" API, developers can make HTTP requests to the defined API endpoints using tools like Postman or cURL. The API endpoints provide functionality for fetching subscriber data, retrieving specific subscriber details, and rendering views for the admin dashboard and start page.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29092277"
	},
	"item": [
		{
			"name": "Admin page",
			"request": {
				"method": "GET",
				"header": [],
				"description": "## GET /\n\n- **Description:** Renders the admin dashboard view.\n    \n- **Response:** HTML content rendering the admin dashboard view.\n    \n- **Status Codes:**\n    \n    - 200: Success"
			},
			"response": [
				{
					"name": "Render admin page",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "2413"
						},
						{
							"key": "ETag",
							"value": "W/\"96d-gqr0aO4DIY3RdspY87KgF1Kni28\""
						},
						{
							"key": "Date",
							"value": "Mon, 11 Mar 2024 12:51:10 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "<!-- admin.ejs -->\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <link rel=\"icon\" href=\"https://api.sertifier.com/userdata/08daf47b-89e4-cd1d-208e-96834580c530/d747e244-cfe7-4a53-b0b4-47ad8e0d9ad4.png\" type=\"image/x-icon\">\n        <title>Start Now</title>\n        <style>\r\n        .container {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            height: 100vh;\r\n        }\r\n\r\n        .box {\r\n            width: 300px;\r\n            padding: 20px;\r\n            border-radius: 10px;\r\n            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\r\n            background-color: #fff;\r\n            transition: box-shadow 0.3s ease-in-out;\r\n            text-align: center;\r\n            position: relative; /* Position relative for absolute positioning of Start Now link */\r\n        }\r\n\r\n        .box:hover {\r\n            box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);\r\n        }\r\n\r\n        .image-container {\r\n            margin-bottom: 20px;\r\n        }\r\n\r\n        .start-link {\r\n            position: absolute; /* Position absolute to place at the bottom left corner */\r\n            bottom: 10px;\r\n            left: 10px;\r\n            text-decoration: none;\r\n            color: black;\r\n            transition: color 0.3s ease-in-out; /* Add transition for color change */\r\n        }\r\n\r\n        .start-link:hover {\r\n            color: #ff4500; /* Change color on hover */\r\n        }\r\n\r\n        .start-link .icon {\r\n            margin-right: 5px;\r\n            transition: color 0.3s ease-in-out; /* Add transition for color change */\r\n        }\r\n\r\n        .start-link:hover .icon {\r\n            color: #ff4500; /* Change color of icon on hover */\r\n        }\r\n    </style>\n    </head>\n    <body>\n        <div class=\"container\">\n            <div class=\"box\">\n                <div class=\"image-container\">\n                    <img src=\"https://api.sertifier.com/userdata/08daf47b-89e4-cd1d-208e-96834580c530/d747e244-cfe7-4a53-b0b4-47ad8e0d9ad4.png\" alt=\"Admin Image\" width=\"200\">\r\n            \n                </div>\n                <h2>Get YouTube Subscribers</h2>\n                <h3>Backend Development</h3>\n                <a class=\"start-link\" href=\"/start-now\">\r\n                Start Now\r\n                \n                    <span class=\"icon\">&#10148;</span>\n                </a>\n            </div>\n        </div>\n    </body>\n</html>"
				}
			]
		},
		{
			"name": "Start Now",
			"request": {
				"method": "GET",
				"header": [],
				"description": "## GET /start-now\n\n- **Description:** Renders the startNow page view.\n    \n- **Response:** HTML content rendering the startNow page view.\n    \n- **Status Codes:**\n    \n    - 200: Success"
			},
			"response": [
				{
					"name": "Render start now page",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/start-now",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"start-now"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "4703"
						},
						{
							"key": "ETag",
							"value": "W/\"125f-uniEGlCP6bknNW5r9n23JgQ4bcs\""
						},
						{
							"key": "Date",
							"value": "Mon, 11 Mar 2024 12:54:23 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <link rel=\"icon\" href=\"/images/YouTubeLogo.png\" type=\"image/x-icon\">\n        <title>Start Now</title>\n        <!-- External stylesheet for styling -->\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\">\n        <!-- Font Awesome for icons -->\n        <style>\r\n    /* Inline CSS styles for this HTML document */\r\n \r\n        body {\r\n            font-family: Arial, sans-serif;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            height: 100vh;\r\n            background-color: #f0f0f0;\r\n        }\r\n\r\n        .container {\r\n            display: flex;\r\n            width: 800px; /* Adjust the width as needed */\r\n            border-radius: 10px;\r\n            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\r\n            background-color: #fff;\r\n            text-align: center;\r\n            transition: box-shadow 0.3s ease-in-out;\r\n        }\r\n        .container:hover {\r\n            box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2); \r\n        }\r\n\r\n        .left-container {\r\n            flex: 1;\r\n            padding: 20px;\r\n        }\r\n\r\n        .right-container {\r\n            flex: 1;\r\n            padding: 20px;\r\n            border-left: 1px solid #ccc; /* Add border between left and right containers */\r\n        }\r\n\r\n        h1 {\r\n            margin-bottom: 20px;\r\n        }\r\n\r\n        button {\r\n            margin-bottom: 10px;\r\n            padding: 10px 20px;\r\n            border: none;\r\n            border-radius: 5px;\r\n            background-color: #007bff;\r\n            color: #fff;\r\n            cursor: pointer;\r\n            transition: background-color 0.3s ease-in-out, border-color 0.3s ease-in-out;\r\n        }\r\n\r\n        button:hover {\r\n            background-color: #0056b3;\r\n        }\r\n\r\n        input[type=\"text\"] {\r\n            width: calc(100% - 30px);\r\n            margin-bottom: 10px;\r\n            padding: 10px;\r\n            border: 1px solid #ccc;\r\n            border-radius: 5px 0 0 5px;\r\n            font-size: 16px;\r\n        }\r\n\r\n        .search-icon {\r\n            position: absolute;\r\n            top: 50%;\r\n            right: 10px;\r\n            transform: translateY(-50%);\r\n            color: #aaa;\r\n        }\r\n\r\n        .input-container {\r\n            position: relative;\r\n            margin-bottom: 10px;\r\n        }\r\n\r\n        #input-id:focus + .search-icon {\r\n            color: #007bff;\r\n        }\r\n\r\n        #input-id:hover + .search-icon {\r\n            color: #007bff;\r\n        }\r\n\r\n        #input-id:hover,\r\n        #input-id:focus {\r\n            border-color: #007bff;\r\n        }\r\n\r\n        #input-id::placeholder {\r\n            color: #aaa;\r\n        }\r\n\r\n        #subscriber-data {\r\n            padding: 10px;\r\n            border: 1px solid #ccc;\r\n            border-radius: 5px;\r\n            background-color: #f9f9f9;\r\n            transition: box-shadow 0.3s ease-in-out;\r\n        }\r\n        #subscriber-data:hover {\r\n            box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2); \r\n        }\r\n        .subscriber-label {\r\n            font-weight: bold;\r\n            margin-bottom: 10px;\r\n            font-size: 20px;\r\n            color: #007bff;\r\n        }\r\n    </style>\n        <script src=\"/scripts/script.js\" defer></script>\n    </head>\n    <body>\n        <!-- Container for the main content -->\n        <div class=\"container\">\n            <!-- Left container for input and buttons -->\n            <div class=\"left-container\">\n                <!-- Image container for the logo -->\n                <div class=\"image-container\">\n                    <!-- Logo image -->\n                    <img src=\"/images/YouTubeLogo.png\" alt=\"Admin Image\" width=\"200\">\r\n            \n                </div>\n                <h1>Admin Dashboard</h1>\n                <div class=\"input-container\">\n                    <input type=\"text\" id=\"input-id\" placeholder=\"Paste Subscriber ID\">\n                    <i class=\"fas fa-search search-icon\"></i>\n                </div>\n                <!-- Button to fetching subscribers data -->\n                <button onclick=\"fetchSubscribersData()\">Subscribers</button>\n                <button onclick=\"fetchSubscriberNames()\">Subscribers Name</button>\n                <button onclick=\"fetchSubscriberDataById()\">Fetch Subscriber Data by ID</button>\n            </div>\n            <!-- Right container for displaying subscriber data -->\n            <div class=\"right-container\">\n                <div class=\"subscriber-label\">Subscriber Data</div>\n                <div id=\"subscriber-data\"></div>\n            </div>\n        </div>\n    </body>\n</html>"
				}
			]
		},
		{
			"name": "All Subscribers",
			"request": {
				"method": "GET",
				"header": [],
				"description": "## GET /subscribers\n\n- **Description:** Retrieves data of all subscribers.\n    \n- **Response:** JSON array containing data of all subscribers.\n    \n- **Status Codes:**\n    \n    - 200: Success\n        \n    - 500: Internal Server Error"
			},
			"response": [
				{
					"name": "Getting All Subscribers Data",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/subscribers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"subscribers"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "413"
						},
						{
							"key": "ETag",
							"value": "W/\"19d-uv+cC0BmwcshjtBrJGpIYYEthe0\""
						},
						{
							"key": "Date",
							"value": "Mon, 11 Mar 2024 12:55:58 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"_id\": \"65eb2df2b5a8c410ac3d7ab2\",\n        \"name\": \"Jeread Krus\",\n        \"subscribedChannel\": \"CNET\",\n        \"subscribedDate\": \"2024-03-08T15:25:38.869Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"65eb2df2b5a8c410ac3d7ab3\",\n        \"name\": \"John Doe\",\n        \"subscribedChannel\": \"freeCodeCamp.org\",\n        \"subscribedDate\": \"2024-03-08T15:25:38.873Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"65eb2df2b5a8c410ac3d7ab4\",\n        \"name\": \"Lucifer\",\n        \"subscribedChannel\": \"Sentex\",\n        \"subscribedDate\": \"2024-03-08T15:25:38.875Z\",\n        \"__v\": 0\n    }\n]"
				}
			]
		},
		{
			"name": "All Subscriber Names",
			"request": {
				"method": "GET",
				"header": [],
				"description": "## GET /subscribers/names\n\n- **Description:** Retrieves names and subscribed channels of all subscribers.\n    \n- **Response:** JSON array containing names and subscribed channels of all subscribers.\n    \n- **Status Codes:**\n    \n    - 200: Success\n        \n    - 500: Internal Server Error"
			},
			"response": [
				{
					"name": "Getting all subscribers name",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/subscribers/names",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"subscribers",
								"names"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "158"
						},
						{
							"key": "ETag",
							"value": "W/\"9e-kEfcMLQvMpyZMQWmSzgFC6W6vlY\""
						},
						{
							"key": "Date",
							"value": "Mon, 11 Mar 2024 12:58:26 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"name\": \"Jeread Krus\",\n        \"subscribedChannel\": \"CNET\"\n    },\n    {\n        \"name\": \"John Doe\",\n        \"subscribedChannel\": \"freeCodeCamp.org\"\n    },\n    {\n        \"name\": \"Lucifer\",\n        \"subscribedChannel\": \"Sentex\"\n    }\n]"
				}
			]
		},
		{
			"name": "Subscriber by id",
			"request": {
				"method": "GET",
				"header": [],
				"description": "## GET /subscribers/:id\n\n- **Description:** Retrieves a single subscriber by ID.\n    \n- **Request Parameter:** `id` (Subscriber ID)\n    \n- **Response:** JSON object containing data of the specified subscriber.\n    \n- **Status Codes:**\n    \n    - 200: Success\n        \n    - 400: Bad Request (Invalid Subscriber ID)\n        \n    - 500: Internal Server Error"
			},
			"response": [
				{
					"name": "get subscriber by their id",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/subscribers/65eb2df2b5a8c410ac3d7ab2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"subscribers",
								"65eb2df2b5a8c410ac3d7ab2"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "134"
						},
						{
							"key": "ETag",
							"value": "W/\"86-nvyIKw73Agn8v4qLoD4dhiFG8yA\""
						},
						{
							"key": "Date",
							"value": "Mon, 11 Mar 2024 13:18:45 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"_id\": \"65eb2df2b5a8c410ac3d7ab2\",\n    \"name\": \"Jeread Krus\",\n    \"subscribedChannel\": \"CNET\",\n    \"subscribedDate\": \"2024-03-08T15:25:38.869Z\",\n    \"__v\": 0\n}"
				}
			]
		},
		{
			"name": "wrong id",
			"request": {
				"method": "GET",
				"header": [],
				"description": "If user enter wrong id."
			},
			"response": [
				{
					"name": "No Subscriber Found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/subscribers/65eb2df2b5a8c410ac3d",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"subscribers",
								"65eb2df2b5a8c410ac3d"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "58"
						},
						{
							"key": "ETag",
							"value": "W/\"3a-6QoZbPXkXh6EWhwQaHyqFZ+AOIM\""
						},
						{
							"key": "Date",
							"value": "Mon, 11 Mar 2024 13:21:43 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"Error_message\": \"No Subscriber found related to this id\"\n}"
				}
			]
		}
	]
}